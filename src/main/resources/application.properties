server.port=8081

spring.kafka.topics=iot-data
spring.kafka.consumer.group-id=output-group-1

#Configuration for docker desktop
#spring.cloud.stream.kafka.binder.brokers= host.docker.internal:9092, host.docker.internal:9094, host.docker.internal:9095
spring.cloud.stream.kafka.binder.brokers= localhost:9092, localhost:9094,  localhost:9095

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers= false
spring.kafka.consumer.properties.spring.json.trusted.packages= *
spring.cloud.stream.bindings.input.content-type=application/json

spring.data.mongodb.host= localhost
#For Docker Desktop In windows use this
#spring.data.mongodb.host= host.docker.internal
spring.data.mongodb.port= 27017
spring.data.mongodb.database= iot